{"ast":null,"code":"var _jsxFileName = \"/Users/sashitharan/Documents - Not on iCloud/Coding/2021/react-login-boilerplate/react-login/src/components/form.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"customerName\",\n          children: \"Customer Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"off\",\n          id: \"customerName\",\n          name: \"customerName\",\n          onChange: e => {\n            setCustomerName(e.target.value);\n\n            if (customerName.length >= 65) {\n              setCustomerNameError(true);\n            } else {\n              setCustomerNameError(false);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this), customerNameError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generic-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Customer Name must not exceed 64 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"customerAge\",\n          children: \"Customer Age:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          autoComplete: \"off\",\n          id: \"customerAge\",\n          name: \"customerAge\",\n          onChange: e => {\n            setCustomerAge(e.target.value);\n\n            if (Number(e.target.value) >= 18) {\n              setCustomerAgeError(false);\n            } else {\n              setCustomerAgeError(true);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), customerAgeError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generic-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Customers must be at least 18 years of age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"serviceOfficerName\",\n          children: \"Service Officer Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"off\",\n          id: \"serviceOfficerName\",\n          name: \"serviceOfficerName\",\n          onChange: e => {\n            setserviceOfficerName(e.target.value);\n\n            if (serviceOfficerName.length >= 65) {\n              setserviceOfficerNameError(true);\n            } else {\n              setserviceOfficerNameError(false);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), serviceOfficerNameError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generic-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Service Officer Name must not exceed 64 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"NRIC\",\n          children: \"NRIC:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"off\",\n          id: \"NRIC\",\n          name: \"NRIC\",\n          onChange: e => {\n            setNRIC(e.target.value);\n\n            if (!e.target.value.match(/^[A-Z]\\d{7}[A-Z]$/)) {\n              setNRICError(true);\n            } else {\n              setNRICError(false);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), NRICError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generic-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"NRIC must be in uppercase and only have 7 numeric numbers.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"branchCode\",\n          children: \"Branch Code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          autoComplete: \"off\",\n          id: \"branchCode\",\n          name: \"branchCode\",\n          onChange: e => {\n            setBranchCode(e.target.value);\n\n            if (e.target.value.match(/^\\d{3}$/)) {\n              setBranchCodeError(false);\n            } else {\n              setBranchCodeError(true);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), branchCodeError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generic-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Must be a valid branch code number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image Upload:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          autoComplete: \"off\",\n          id: \"image\",\n          name: \"image\",\n          accept: \"image/*\",\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), imageError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generic-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Image attached should be JPEG/PNG format, and should not exceed 2 megabytes.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"productType\",\n          children: \"Product Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"productType\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"137\",\n            children: \"Investor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"070\",\n            children: \"Insurance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"291\",\n            children: \"Loans\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"969\",\n            children: \"Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"555\",\n            children: \"Credit Cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginBottom: '0px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.setIsAuthenticated(false);\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generic-success\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Form has submitted successfully.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Form;\nexport default form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/sashitharan/Documents - Not on iCloud/Coding/2021/react-login-boilerplate/react-login/src/components/form.jsx"],"names":["React","Form","submit","e","setCustomerName","target","value","customerName","length","setCustomerNameError","customerNameError","setCustomerAge","Number","setCustomerAgeError","customerAgeError","setserviceOfficerName","serviceOfficerName","setserviceOfficerNameError","serviceOfficerNameError","setNRIC","match","setNRICError","NRICError","setBranchCode","setBranchCodeError","branchCodeError","handleImageUpload","imageError","display","justifyContent","marginBottom","props","setIsAuthenticated","success","form"],"mappings":"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","sourcesContent":["import React from 'react';\n\nconst Form = () => {\n\n\n\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={submit}>\n        <div>\n          <label htmlFor=\"customerName\">Customer Name:</label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"customerName\"\n            name=\"customerName\"\n            onChange={(e) => {\n              setCustomerName(e.target.value);\n              if (customerName.length >= 65) {\n                setCustomerNameError(true);\n              } else {\n                setCustomerNameError(false);\n              }\n            }}\n          />\n          {customerNameError && (\n            <div className=\"generic-error\">\n              <p>Customer Name must not exceed 64 characters</p>\n            </div>\n          )}\n        </div>\n\n        <div>\n          <label htmlFor=\"customerAge\">Customer Age:</label>\n          <input\n            type=\"number\"\n            autoComplete=\"off\"\n            id=\"customerAge\"\n            name=\"customerAge\"\n            onChange={(e) => {\n              setCustomerAge(e.target.value);\n\n              if (Number(e.target.value) >= 18) {\n                setCustomerAgeError(false);\n              } else {\n                setCustomerAgeError(true);\n              }\n            }}\n          />\n\n          {customerAgeError && (\n            <div className=\"generic-error\">\n              <p>Customers must be at least 18 years of age</p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"serviceOfficerName\">Service Officer Name:</label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"serviceOfficerName\"\n            name=\"serviceOfficerName\"\n            onChange={(e) => {\n              setserviceOfficerName(e.target.value);\n              if (serviceOfficerName.length >= 65) {\n                setserviceOfficerNameError(true);\n              } else {\n                setserviceOfficerNameError(false);\n              }\n            }}\n          />\n\n          {serviceOfficerNameError && (\n            <div className=\"generic-error\">\n              <p>Service Officer Name must not exceed 64 characters.</p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"NRIC\">NRIC:</label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"NRIC\"\n            name=\"NRIC\"\n            onChange={(e) => {\n              setNRIC(e.target.value);\n              if (!e.target.value.match(/^[A-Z]\\d{7}[A-Z]$/)) {\n                setNRICError(true);\n              } else {\n                setNRICError(false);\n              }\n            }}\n          />\n\n          {NRICError && (\n            <div className=\"generic-error\">\n              <p>NRIC must be in uppercase and only have 7 numeric numbers.</p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"branchCode\">Branch Code:</label>\n          <input\n            type=\"number\"\n            autoComplete=\"off\"\n            id=\"branchCode\"\n            name=\"branchCode\"\n            onChange={(e) => {\n              setBranchCode(e.target.value);\n              if (e.target.value.match(/^\\d{3}$/)) {\n                setBranchCodeError(false);\n              } else {\n                setBranchCodeError(true);\n              }\n            }}\n          />\n\n          {branchCodeError && (\n            <div className=\"generic-error\">\n              <p>Must be a valid branch code number</p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"image\">Image Upload:</label>\n          <input\n            type=\"file\"\n            autoComplete=\"off\"\n            id=\"image\"\n            name=\"image\"\n            accept=\"image/*\"\n            onChange={handleImageUpload}\n          />\n          {imageError && (\n            <div className=\"generic-error\">\n              <p>\n                Image attached should be JPEG/PNG format, and should not exceed\n                2 megabytes.\n              </p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"productType\">Product Type:</label>\n          <select id=\"productType\">\n            <option value=\"137\">Investor</option>\n            <option value=\"070\">Insurance</option>\n            <option value=\"291\">Loans</option>\n            <option value=\"969\">Savings</option>\n            <option value=\"555\">Credit Cards</option>\n          </select>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: '0px',\n          }}\n        >\n          <button\n            onClick={() => {\n              props.setIsAuthenticated(false);\n            }}\n          >\n            Logout\n          </button>\n          &nbsp;<button type=\"submit\">Submit</button>\n        </div>\n        {success && (\n          <div className=\"generic-success\">\n            <p> Form has submitted successfully.</p>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\nexport default form;\n"]},"metadata":{},"sourceType":"module"}