{"ast":null,"code":"var _jsxFileName = \"/Users/sashitharan/Documents - Not on iCloud/Coding/2021/react-login-boilerplate/react-login/src/components/Form.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = () => {\n  _s();\n\n  const [customerName, setCustomerName] = useState('');\n  const [customerAge, setCustomerAge] = useState(0);\n  const [serviceOfficerName, setServiceOfficerName] = useState('');\n  const [NRIC, setNRIC] = useState('');\n  const [branchCode, setBranchCode] = useState('');\n  const [image, setImage] = useState('');\n  const [success, setSuccess] = useState(false);\n  const [customerNameError, setCustomerNameError] = useState(false);\n  const [customerAgeError, setCustomerAgeError] = useState(false);\n  const [serviceOfficerNameError, setserviceOfficerNameError] = useState(false);\n  const [NRICError, setNRICError] = useState(false);\n  const [branchCodeError, setBranchCodeError] = useState(false);\n  const [imageError, setImageError] = useState(false);\n\n  const handleImageUpload = () => {\n    let fileInput = document.getElementById('image');\n    let filePath = fileInput.value;\n    let allowedExtensions = /(\\.jpeg|\\.png)$/i;\n\n    if (!allowedExtensions.exec(filePath)) {\n      alert('Invalid file type');\n      fileInput.value = '';\n      setImageError(true);\n      return false;\n    } else {\n      if (fileInput.files[0].size > 2097152) {\n        alert('File is too big!');\n        fileInput.value = '';\n        setImageError(true);\n        return false;\n      }\n\n      setImage(fileInput.files[0]);\n      setImageError(false);\n    }\n  };\n\n  const submit = e => {\n    e.preventDefault();\n    let today = new Date();\n    let time = today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\n    let yyyy = today.getFullYear();\n    today = dd + '/' + mm + '/' + yyyy + ' ' + time;\n\n    if (customerName.length === 0) {\n      setCustomerName(true);\n    }\n\n    if (serviceOfficerName.length === 0) {\n      setserviceOfficerName(true);\n    }\n\n    if (customerName === 'admin') {\n      setSuccess(true);\n    }\n\n    if (customerNameError === false && customerAgeError === false && serviceOfficerNameError === false && NRICError === false && branchCodeError === false && imageError === false) {\n      let token = JSON.parse(localStorage.getItem('token'));\n      axios.post('', {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data'\n        },\n        customerName: customerName,\n        customerAge: customerAge,\n        serviceOfficerName: serviceOfficerName,\n        NRIC: NRIC,\n        branchCode: branchCode,\n        image: image\n      }).then(res => {\n        setSuccess(true);\n        console.log(res);\n      }).catch(err => {\n        console.log(err);\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"customerName\",\n          children: \"Customer Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"off\",\n          id: \"customerName\",\n          name: \"customerName\",\n          onChange: e => {\n            setCustomerName(e.target.value);\n\n            if (customerName.length >= 65) {\n              setCustomerNameError(true);\n            } else {\n              setCustomerNameError(false);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), customerNameError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generic-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Customer Name must not exceed 64 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"customerAge\",\n          children: \"Customer Age:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          autoComplete: \"off\",\n          id: \"customerAge\",\n          name: \"customerAge\",\n          onChange: e => {\n            setCustomerAge(e.target.value);\n\n            if (Number(e.target.value) >= 18) {\n              setCustomerAgeError(false);\n            } else {\n              setCustomerAgeError(true);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), customerAgeError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generic-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Customers must be at least 18 years of age\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"serviceOfficerName\",\n          children: \"Service Officer Name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"off\",\n          id: \"serviceOfficerName\",\n          name: \"serviceOfficerName\",\n          onChange: e => {\n            setserviceOfficerName(e.target.value);\n\n            if (serviceOfficerName.length >= 65) {\n              setserviceOfficerNameError(true);\n            } else {\n              setserviceOfficerNameError(false);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), serviceOfficerNameError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generic-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Service Officer Name must not exceed 64 characters.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"NRIC\",\n          children: \"NRIC:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          autoComplete: \"off\",\n          id: \"NRIC\",\n          name: \"NRIC\",\n          onChange: e => {\n            setNRIC(e.target.value);\n\n            if (!e.target.value.match(/^[A-Z]\\d{7}[A-Z]$/)) {\n              setNRICError(true);\n            } else {\n              setNRICError(false);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), NRICError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generic-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"NRIC must be in uppercase and only have 7 numeric numbers.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"branchCode\",\n          children: \"Branch Code:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          autoComplete: \"off\",\n          id: \"branchCode\",\n          name: \"branchCode\",\n          onChange: e => {\n            setBranchCode(e.target.value);\n\n            if (e.target.value.match(/^\\d{3}$/)) {\n              setBranchCodeError(false);\n            } else {\n              setBranchCodeError(true);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), branchCodeError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generic-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Must be a valid branch code number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          children: \"Image Upload:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          autoComplete: \"off\",\n          id: \"image\",\n          name: \"image\",\n          accept: \"image/*\",\n          onChange: handleImageUpload\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), imageError && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"generic-error\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Image attached should be JPEG/PNG format, and should not exceed 2 megabytes.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"productType\",\n          children: \"Product Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"productType\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"137\",\n            children: \"Investor\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"070\",\n            children: \"Insurance\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"291\",\n            children: \"Loans\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"969\",\n            children: \"Savings\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"555\",\n            children: \"Credit Cards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginBottom: '0px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            props.setIsAuthenticated(false);\n          },\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this), \"\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"generic-success\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \" Form has submitted successfully.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"dOYgWmVzhN9C1gBBc/bwt+hUm6o=\");\n\n_c = Form;\nexport default form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/sashitharan/Documents - Not on iCloud/Coding/2021/react-login-boilerplate/react-login/src/components/Form.jsx"],"names":["React","Form","customerName","setCustomerName","useState","customerAge","setCustomerAge","serviceOfficerName","setServiceOfficerName","NRIC","setNRIC","branchCode","setBranchCode","image","setImage","success","setSuccess","customerNameError","setCustomerNameError","customerAgeError","setCustomerAgeError","serviceOfficerNameError","setserviceOfficerNameError","NRICError","setNRICError","branchCodeError","setBranchCodeError","imageError","setImageError","handleImageUpload","fileInput","document","getElementById","filePath","value","allowedExtensions","exec","alert","files","size","submit","e","preventDefault","today","Date","time","getHours","getMinutes","getSeconds","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","length","setserviceOfficerName","token","JSON","parse","localStorage","getItem","axios","post","headers","Authorization","then","res","console","log","catch","err","target","Number","match","display","justifyContent","marginBottom","props","setIsAuthenticated","form"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCF,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACG,kBAAD,EAAqBC,qBAArB,IAA8CJ,QAAQ,CAAC,EAAD,CAA5D;AAEA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;AAEA,QAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AAEA,QAAM,CAACa,iBAAD,EAAoBC,oBAApB,IAA4Cd,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACe,gBAAD,EAAmBC,mBAAnB,IAA0ChB,QAAQ,CAAC,KAAD,CAAxD;AACA,QAAM,CAACiB,uBAAD,EAA0BC,0BAA1B,IAAwDlB,QAAQ,CAAC,KAAD,CAAtE;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACqB,eAAD,EAAkBC,kBAAlB,IAAwCtB,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACuB,UAAD,EAAaC,aAAb,IAA8BxB,QAAQ,CAAC,KAAD,CAA5C;;AACA,QAAMyB,iBAAiB,GAAG,MAAM;AAC9B,QAAIC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,OAAxB,CAAhB;AACA,QAAIC,QAAQ,GAAGH,SAAS,CAACI,KAAzB;AACA,QAAIC,iBAAiB,GAAG,kBAAxB;;AACA,QAAI,CAACA,iBAAiB,CAACC,IAAlB,CAAuBH,QAAvB,CAAL,EAAuC;AACrCI,MAAAA,KAAK,CAAC,mBAAD,CAAL;AACAP,MAAAA,SAAS,CAACI,KAAV,GAAkB,EAAlB;AACAN,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA,aAAO,KAAP;AACD,KALD,MAKO;AACL,UAAIE,SAAS,CAACQ,KAAV,CAAgB,CAAhB,EAAmBC,IAAnB,GAA0B,OAA9B,EAAuC;AACrCF,QAAAA,KAAK,CAAC,kBAAD,CAAL;AACAP,QAAAA,SAAS,CAACI,KAAV,GAAkB,EAAlB;AACAN,QAAAA,aAAa,CAAC,IAAD,CAAb;AACA,eAAO,KAAP;AACD;;AACDd,MAAAA,QAAQ,CAACgB,SAAS,CAACQ,KAAV,CAAgB,CAAhB,CAAD,CAAR;AACAV,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GAnBD;;AAqBA,QAAMY,MAAM,GAAIC,CAAD,IAAO;AACpBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,QAAIC,IAAI,GACNF,KAAK,CAACG,QAAN,KAAmB,GAAnB,GAAyBH,KAAK,CAACI,UAAN,EAAzB,GAA8C,GAA9C,GAAoDJ,KAAK,CAACK,UAAN,EADtD;AAGA,QAAIC,EAAE,GAAGC,MAAM,CAACP,KAAK,CAACQ,OAAN,EAAD,CAAN,CAAwBC,QAAxB,CAAiC,CAAjC,EAAoC,GAApC,CAAT;AACA,QAAIC,EAAE,GAAGH,MAAM,CAACP,KAAK,CAACW,QAAN,KAAmB,CAApB,CAAN,CAA6BF,QAA7B,CAAsC,CAAtC,EAAyC,GAAzC,CAAT;AACA,QAAIG,IAAI,GAAGZ,KAAK,CAACa,WAAN,EAAX;AAEAb,IAAAA,KAAK,GAAGM,EAAE,GAAG,GAAL,GAAWI,EAAX,GAAgB,GAAhB,GAAsBE,IAAtB,GAA6B,GAA7B,GAAmCV,IAA3C;;AAEA,QAAI3C,YAAY,CAACuD,MAAb,KAAwB,CAA5B,EAA+B;AAC7BtD,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;;AACD,QAAII,kBAAkB,CAACkD,MAAnB,KAA8B,CAAlC,EAAqC;AACnCC,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;;AACD,QAAIxD,YAAY,KAAK,OAArB,EAA8B;AAC5Bc,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;;AACD,QACEC,iBAAiB,KAAK,KAAtB,IACAE,gBAAgB,KAAK,KADrB,IAEAE,uBAAuB,KAAK,KAF5B,IAGAE,SAAS,KAAK,KAHd,IAIAE,eAAe,KAAK,KAJpB,IAKAE,UAAU,KAAK,KANjB,EAOE;AACA,UAAIgC,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAX,CAAZ;AACAC,MAAAA,KAAK,CACFC,IADH,CACQ,EADR,EACY;AACRC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,EAAG,UAASR,KAAM,EADxB;AAEP,0BAAgB;AAFT,SADD;AAKRzD,QAAAA,YAAY,EAAEA,YALN;AAMRG,QAAAA,WAAW,EAAEA,WANL;AAORE,QAAAA,kBAAkB,EAAEA,kBAPZ;AAQRE,QAAAA,IAAI,EAAEA,IARE;AASRE,QAAAA,UAAU,EAAEA,UATJ;AAURE,QAAAA,KAAK,EAAEA;AAVC,OADZ,EAaGuD,IAbH,CAaSC,GAAD,IAAS;AACbrD,QAAAA,UAAU,CAAC,IAAD,CAAV;AACAsD,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,OAhBH,EAiBGG,KAjBH,CAiBUC,GAAD,IAAS;AACdH,QAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD,OAnBH;AAoBD;AACF,GAnDD;;AAqDA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEjC,MAAhB;AAAA,8BACE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,YAAY,EAAC,KAFf;AAGE,UAAA,EAAE,EAAC,cAHL;AAIE,UAAA,IAAI,EAAC,cAJP;AAKE,UAAA,QAAQ,EAAGC,CAAD,IAAO;AACftC,YAAAA,eAAe,CAACsC,CAAC,CAACiC,MAAF,CAASxC,KAAV,CAAf;;AACA,gBAAIhC,YAAY,CAACuD,MAAb,IAAuB,EAA3B,EAA+B;AAC7BvC,cAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD,aAFD,MAEO;AACLA,cAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD;AACF;AAZH;AAAA;AAAA;AAAA;AAAA,gBAFF,EAgBGD,iBAAiB,iBAChB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAjBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAwBE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,YAAY,EAAC,KAFf;AAGE,UAAA,EAAE,EAAC,aAHL;AAIE,UAAA,IAAI,EAAC,aAJP;AAKE,UAAA,QAAQ,EAAGwB,CAAD,IAAO;AACfnC,YAAAA,cAAc,CAACmC,CAAC,CAACiC,MAAF,CAASxC,KAAV,CAAd;;AAEA,gBAAIyC,MAAM,CAAClC,CAAC,CAACiC,MAAF,CAASxC,KAAV,CAAN,IAA0B,EAA9B,EAAkC;AAChCd,cAAAA,mBAAmB,CAAC,KAAD,CAAnB;AACD,aAFD,MAEO;AACLA,cAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AACF;AAbH;AAAA;AAAA;AAAA;AAAA,gBAFF,EAkBGD,gBAAgB,iBACf;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAxBF,eAgDE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,YAAY,EAAC,KAFf;AAGE,UAAA,EAAE,EAAC,oBAHL;AAIE,UAAA,IAAI,EAAC,oBAJP;AAKE,UAAA,QAAQ,EAAGsB,CAAD,IAAO;AACfiB,YAAAA,qBAAqB,CAACjB,CAAC,CAACiC,MAAF,CAASxC,KAAV,CAArB;;AACA,gBAAI3B,kBAAkB,CAACkD,MAAnB,IAA6B,EAAjC,EAAqC;AACnCnC,cAAAA,0BAA0B,CAAC,IAAD,CAA1B;AACD,aAFD,MAEO;AACLA,cAAAA,0BAA0B,CAAC,KAAD,CAA1B;AACD;AACF;AAZH;AAAA;AAAA;AAAA;AAAA,gBAFF,EAiBGD,uBAAuB,iBACtB;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhDF,eAuEE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,YAAY,EAAC,KAFf;AAGE,UAAA,EAAE,EAAC,MAHL;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,QAAQ,EAAGoB,CAAD,IAAO;AACf/B,YAAAA,OAAO,CAAC+B,CAAC,CAACiC,MAAF,CAASxC,KAAV,CAAP;;AACA,gBAAI,CAACO,CAAC,CAACiC,MAAF,CAASxC,KAAT,CAAe0C,KAAf,CAAqB,mBAArB,CAAL,EAAgD;AAC9CpD,cAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,aAFD,MAEO;AACLA,cAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF;AAZH;AAAA;AAAA;AAAA;AAAA,gBAFF,EAiBGD,SAAS,iBACR;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAvEF,eA8FE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,YAAY,EAAC,KAFf;AAGE,UAAA,EAAE,EAAC,YAHL;AAIE,UAAA,IAAI,EAAC,YAJP;AAKE,UAAA,QAAQ,EAAGkB,CAAD,IAAO;AACf7B,YAAAA,aAAa,CAAC6B,CAAC,CAACiC,MAAF,CAASxC,KAAV,CAAb;;AACA,gBAAIO,CAAC,CAACiC,MAAF,CAASxC,KAAT,CAAe0C,KAAf,CAAqB,SAArB,CAAJ,EAAqC;AACnClD,cAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD,aAFD,MAEO;AACLA,cAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACD;AACF;AAZH;AAAA;AAAA;AAAA;AAAA,gBAFF,EAiBGD,eAAe,iBACd;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA,cA9FF,eAqHE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,YAAY,EAAC,KAFf;AAGE,UAAA,EAAE,EAAC,OAHL;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,MAAM,EAAC,SALT;AAME,UAAA,QAAQ,EAAEI;AANZ;AAAA;AAAA;AAAA;AAAA,gBAFF,EAUGF,UAAU,iBACT;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cArHF,eAwIE;AAAA,gCACE;AAAO,UAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,EAAE,EAAC,aAAX;AAAA,kCACE;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAQ,YAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAxIF,eAkJE;AACE,QAAA,KAAK,EAAE;AACLkD,UAAAA,OAAO,EAAE,MADJ;AAELC,UAAAA,cAAc,EAAE,QAFX;AAGLC,UAAAA,YAAY,EAAE;AAHT,SADT;AAAA,gCAOE;AACE,UAAA,OAAO,EAAE,MAAM;AACbC,YAAAA,KAAK,CAACC,kBAAN,CAAyB,KAAzB;AACD,WAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,uBAcQ;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdR;AAAA;AAAA;AAAA;AAAA;AAAA,cAlJF,EAkKGlE,OAAO,iBACN;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAnKJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4KD,CAvQD;;GAAMd,I;;KAAAA,I;AAwQN,eAAeiF,IAAf","sourcesContent":["import React from 'react';\n\nconst Form = () => {\n  const [customerName, setCustomerName] = useState('');\n  const [customerAge, setCustomerAge] = useState(0);\n  const [serviceOfficerName, setServiceOfficerName] = useState('');\n\n  const [NRIC, setNRIC] = useState('');\n  const [branchCode, setBranchCode] = useState('');\n\n  const [image, setImage] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  const [customerNameError, setCustomerNameError] = useState(false);\n  const [customerAgeError, setCustomerAgeError] = useState(false);\n  const [serviceOfficerNameError, setserviceOfficerNameError] = useState(false);\n  const [NRICError, setNRICError] = useState(false);\n  const [branchCodeError, setBranchCodeError] = useState(false);\n  const [imageError, setImageError] = useState(false);\n  const handleImageUpload = () => {\n    let fileInput = document.getElementById('image');\n    let filePath = fileInput.value;\n    let allowedExtensions = /(\\.jpeg|\\.png)$/i;\n    if (!allowedExtensions.exec(filePath)) {\n      alert('Invalid file type');\n      fileInput.value = '';\n      setImageError(true);\n      return false;\n    } else {\n      if (fileInput.files[0].size > 2097152) {\n        alert('File is too big!');\n        fileInput.value = '';\n        setImageError(true);\n        return false;\n      }\n      setImage(fileInput.files[0]);\n      setImageError(false);\n    }\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    let today = new Date();\n    let time =\n      today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\n    let yyyy = today.getFullYear();\n\n    today = dd + '/' + mm + '/' + yyyy + ' ' + time;\n\n    if (customerName.length === 0) {\n      setCustomerName(true);\n    }\n    if (serviceOfficerName.length === 0) {\n      setserviceOfficerName(true);\n    }\n    if (customerName === 'admin') {\n      setSuccess(true);\n    }\n    if (\n      customerNameError === false &&\n      customerAgeError === false &&\n      serviceOfficerNameError === false &&\n      NRICError === false &&\n      branchCodeError === false &&\n      imageError === false\n    ) {\n      let token = JSON.parse(localStorage.getItem('token'));\n      axios\n        .post('', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n          },\n          customerName: customerName,\n          customerAge: customerAge,\n          serviceOfficerName: serviceOfficerName,\n          NRIC: NRIC,\n          branchCode: branchCode,\n          image: image,\n        })\n        .then((res) => {\n          setSuccess(true);\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={submit}>\n        <div>\n          <label htmlFor=\"customerName\">Customer Name:</label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"customerName\"\n            name=\"customerName\"\n            onChange={(e) => {\n              setCustomerName(e.target.value);\n              if (customerName.length >= 65) {\n                setCustomerNameError(true);\n              } else {\n                setCustomerNameError(false);\n              }\n            }}\n          />\n          {customerNameError && (\n            <div className=\"generic-error\">\n              <p>Customer Name must not exceed 64 characters</p>\n            </div>\n          )}\n        </div>\n\n        <div>\n          <label htmlFor=\"customerAge\">Customer Age:</label>\n          <input\n            type=\"number\"\n            autoComplete=\"off\"\n            id=\"customerAge\"\n            name=\"customerAge\"\n            onChange={(e) => {\n              setCustomerAge(e.target.value);\n\n              if (Number(e.target.value) >= 18) {\n                setCustomerAgeError(false);\n              } else {\n                setCustomerAgeError(true);\n              }\n            }}\n          />\n\n          {customerAgeError && (\n            <div className=\"generic-error\">\n              <p>Customers must be at least 18 years of age</p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"serviceOfficerName\">Service Officer Name:</label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"serviceOfficerName\"\n            name=\"serviceOfficerName\"\n            onChange={(e) => {\n              setserviceOfficerName(e.target.value);\n              if (serviceOfficerName.length >= 65) {\n                setserviceOfficerNameError(true);\n              } else {\n                setserviceOfficerNameError(false);\n              }\n            }}\n          />\n\n          {serviceOfficerNameError && (\n            <div className=\"generic-error\">\n              <p>Service Officer Name must not exceed 64 characters.</p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"NRIC\">NRIC:</label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"NRIC\"\n            name=\"NRIC\"\n            onChange={(e) => {\n              setNRIC(e.target.value);\n              if (!e.target.value.match(/^[A-Z]\\d{7}[A-Z]$/)) {\n                setNRICError(true);\n              } else {\n                setNRICError(false);\n              }\n            }}\n          />\n\n          {NRICError && (\n            <div className=\"generic-error\">\n              <p>NRIC must be in uppercase and only have 7 numeric numbers.</p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"branchCode\">Branch Code:</label>\n          <input\n            type=\"number\"\n            autoComplete=\"off\"\n            id=\"branchCode\"\n            name=\"branchCode\"\n            onChange={(e) => {\n              setBranchCode(e.target.value);\n              if (e.target.value.match(/^\\d{3}$/)) {\n                setBranchCodeError(false);\n              } else {\n                setBranchCodeError(true);\n              }\n            }}\n          />\n\n          {branchCodeError && (\n            <div className=\"generic-error\">\n              <p>Must be a valid branch code number</p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"image\">Image Upload:</label>\n          <input\n            type=\"file\"\n            autoComplete=\"off\"\n            id=\"image\"\n            name=\"image\"\n            accept=\"image/*\"\n            onChange={handleImageUpload}\n          />\n          {imageError && (\n            <div className=\"generic-error\">\n              <p>\n                Image attached should be JPEG/PNG format, and should not exceed\n                2 megabytes.\n              </p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"productType\">Product Type:</label>\n          <select id=\"productType\">\n            <option value=\"137\">Investor</option>\n            <option value=\"070\">Insurance</option>\n            <option value=\"291\">Loans</option>\n            <option value=\"969\">Savings</option>\n            <option value=\"555\">Credit Cards</option>\n          </select>\n        </div>\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: '0px',\n          }}\n        >\n          <button\n            onClick={() => {\n              props.setIsAuthenticated(false);\n            }}\n          >\n            Logout\n          </button>\n          &nbsp;<button type=\"submit\">Submit</button>\n        </div>\n        {success && (\n          <div className=\"generic-success\">\n            <p> Form has submitted successfully.</p>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\nexport default form;\n"]},"metadata":{},"sourceType":"module"}