{"version":3,"sources":["components/login.jsx","components/form.jsx","images/dbs.png","components/Header.js","App.js","index.js"],"names":["Login","props","useState","user","setUsername","pass","setPassword","loginError","setLoginError","className","onSubmit","e","preventDefault","setIsAuthenticated","axios","post","username","password","then","res","catch","error","style","color","htmlFor","type","autoComplete","id","name","placeholder","onChange","target","value","Form","customerName","setCustomerName","customerAge","setCustomerAge","serviceOfficerName","setserviceOfficerName","NRIC","setNRIC","branchCode","setBranchCode","image","setImage","success","setSuccess","customerNameError","setCustomerNameError","customerAgeError","setCustomerAgeError","serviceOfficerNameError","setserviceOfficerNameError","NRICError","setNRICError","branchCodeError","setBranchCodeError","imageError","setImageError","today","Date","time","getHours","getMinutes","getSeconds","dd","String","getDate","padStart","mm","getMonth","yyyy","getFullYear","length","token","JSON","parse","localStorage","getItem","headers","Authorization","console","log","err","Number","match","accept","fileInput","document","getElementById","filePath","exec","files","size","alert","display","justifyContent","marginBottom","onClick","Header","src","dbs","width","height","App","isAuthenticated","ReactDOM","render"],"mappings":"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","file":"static/js/main.522db657.chunk.js","sourcesContent":["import React, {useState} from 'react';\nimport axios from 'axios';\n\nconst Login = (props) => {\n  const [user, setUsername] = useState('');\n  const [pass, setPassword] = useState('');\n  const [loginError, setLoginError] = useState(false);\n\n\n  const submit = (e) => {\n    e.preventDefault();\n    if (user === 'admin' && pass===\"admin\") {\n      props.setIsAuthenticated(true);\n    }\n    axios\n      .post('http://localhost:8000/api-token-auth/', {\n        username: user,\n        password: pass,\n      })\n      .then((res) => {\n        props.setIsAuthenticated(true);\n      })\n      .catch((error) => {\n        setLoginError(true);\n      });\n  };\n  return (\n    <div className=\"container\">\n      <form onSubmit={submit}>\n        <div>\n          <h1 style={{color: 'black'}}>DBS Login</h1>\n          <label htmlFor=\"username\">Admin Username:</label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"username\"\n            name=\"username\"\n            placeholder=\"Enter your username here\"\n            onChange={(e) => {\n              setUsername(e.target.value);\n            }}\n          />\n        </div>\n        <div>\n          <label htmlFor=\"password\">Password:</label>\n          <input\n            type=\"password\"\n            autoComplete=\"off\"\n            id=\"password\"\n            name=\"password\"\n            placeholder=\"Enter your password here\"\n            onChange={(e) => {\n              setPassword(e.target.value);\n            }}\n          />\n        </div>\n        {loginError && (\n          <div id=\"errorMessage\" className=\"generic-error\">\n            <p> The credentials you have entered is not valid.</p>\n          </div>\n        )}\n        <button type=\"submit\">SUBMIT</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","import React, {useState} from 'react';\nimport axios from 'axios';\n\nconst Form = (props) => {\n  const [customerName, setCustomerName] = useState('');\n  const [customerAge, setCustomerAge] = useState(0);\n  const [serviceOfficerName, setserviceOfficerName] = useState('');\n  const [NRIC, setNRIC] = useState('');\n  const [branchCode, setBranchCode] = useState('');\n  const [image, setImage] = useState('');\n  const [success, setSuccess] = useState(false);\n\n  const [customerNameError, setCustomerNameError] = useState(false);\n  const [customerAgeError, setCustomerAgeError] = useState(false);\n  const [serviceOfficerNameError, setserviceOfficerNameError] = useState(false);\n  const [NRICError, setNRICError] = useState(false);\n  const [branchCodeError, setBranchCodeError] = useState(false);\n  const [imageError, setImageError] = useState(false);\n\n  const handleImageUpload = () => {\n    let fileInput = document.getElementById('image');\n    let filePath = fileInput.value;\n    let allowedExtensions = /(\\.jpeg|\\.png)$/i;\n    if (!allowedExtensions.exec(filePath)) {\n      alert('Invalid file type');\n      fileInput.value = '';\n      setImageError(true);\n      return false;\n    } else {\n      if (fileInput.files[0].size > 2097152) {\n        alert('File is too big!');\n        fileInput.value = '';\n        setImageError(true);\n        return false;\n      }\n      setImage(fileInput.files[0]);\n      setImageError(false);\n    }\n  };\n\n  const submit = (e) => {\n    e.preventDefault();\n    let today = new Date();\n    let time =\n      today.getHours() + ':' + today.getMinutes() + ':' + today.getSeconds();\n\n    let dd = String(today.getDate()).padStart(2, '0');\n    let mm = String(today.getMonth() + 1).padStart(2, '0');\n    let yyyy = today.getFullYear();\n\n    today = dd + '/' + mm + '/' + yyyy + ' ' + time;\n\n    if (customerName.length === 0) {\n      setCustomerName(true);\n    }\n    if (serviceOfficerName.length === 0) {\n      setserviceOfficerName(true);\n    }\n    if (customerName === 'admin') {\n      setSuccess(true);\n    }\n    if (\n      customerNameError === false &&\n      customerAgeError === false &&\n      serviceOfficerNameError === false &&\n      NRICError === false &&\n      branchCodeError === false &&\n      imageError === false\n    ) {\n      let token = JSON.parse(localStorage.getItem('token'));\n      axios\n        .post('', {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            'Content-Type': 'multipart/form-data',\n          },\n          customerName: customerName,\n          customerAge: customerAge,\n          serviceOfficerName: serviceOfficerName,\n          NRIC: NRIC,\n          branchCode: branchCode,\n          image: image,\n        })\n        .then((res) => {\n          setSuccess(true);\n          console.log(res);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <form onSubmit={submit}>\n        <h1 style={{color: 'black'}}>Register Customer</h1>\n        <div>\n          <label htmlFor=\"customerName\">Customer Name:</label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"customerName\"\n            name=\"customerName\"\n            onChange={(e) => {\n              setCustomerName(e.target.value);\n              if (customerName.length >= 65) {\n                setCustomerNameError(true);\n              } else {\n                setCustomerNameError(false);\n              }\n            }}\n          />\n          {customerNameError && (\n            <div className=\"generic-error\">\n              <p>Customer Name must not exceed 64 characters</p>\n            </div>\n          )}\n        </div>\n\n        <div>\n          <label htmlFor=\"customerAge\">Customer Age:</label>\n          <input\n            type=\"number\"\n            autoComplete=\"off\"\n            id=\"customerAge\"\n            name=\"customerAge\"\n            onChange={(e) => {\n              setCustomerAge(e.target.value);\n\n              if (Number(e.target.value) >= 18) {\n                setCustomerAgeError(false);\n              } else {\n                setCustomerAgeError(true);\n              }\n            }}\n          />\n\n          {customerAgeError && (\n            <div className=\"generic-error\">\n              <p>Customers must be at least 18 years of age</p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"serviceOfficerName\">Service Officer Name:</label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"serviceOfficerName\"\n            name=\"serviceOfficerName\"\n            onChange={(e) => {\n              setserviceOfficerName(e.target.value);\n              if (serviceOfficerName.length >= 65) {\n                setserviceOfficerNameError(true);\n              } else {\n                setserviceOfficerNameError(false);\n              }\n            }}\n          />\n\n          {serviceOfficerNameError && (\n            <div className=\"generic-error\">\n              <p>Service Officer Name must not exceed 64 characters.</p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"NRIC\">NRIC:</label>\n          <input\n            type=\"text\"\n            autoComplete=\"off\"\n            id=\"NRIC\"\n            name=\"NRIC\"\n            onChange={(e) => {\n              setNRIC(e.target.value);\n              if (!e.target.value.match(/^[A-Z]\\d{7}[A-Z]$/)) {\n                setNRICError(true);\n              } else {\n                setNRICError(false);\n              }\n            }}\n          />\n\n          {NRICError && (\n            <div className=\"generic-error\">\n              <p>NRIC must be in uppercase and only have 7 numeric numbers.</p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"branchCode\">Branch Code:</label>\n          <input\n            type=\"number\"\n            autoComplete=\"off\"\n            id=\"branchCode\"\n            name=\"branchCode\"\n            onChange={(e) => {\n              setBranchCode(e.target.value);\n              if (e.target.value.match(/^\\d{3}$/)) {\n                setBranchCodeError(false);\n              } else {\n                setBranchCodeError(true);\n              }\n            }}\n          />\n\n          {branchCodeError && (\n            <div className=\"generic-error\">\n              <p>Must be a valid branch code number</p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"image\">Image Upload:</label>\n          <input\n            type=\"file\"\n            autoComplete=\"off\"\n            id=\"image\"\n            name=\"image\"\n            accept=\"image/*\"\n            onChange={handleImageUpload}\n          />\n          {imageError && (\n            <div className=\"generic-error\">\n              <p>\n                Image attached should be JPEG/PNG format, and should not exceed\n                2 megabytes.\n              </p>\n            </div>\n          )}\n        </div>\n        <div>\n          <label htmlFor=\"productType\">Product Type:</label>\n          <select id=\"productType\">\n            <option value=\"137\">Investor</option>\n            <option value=\"070\">Insurance</option>\n            <option value=\"291\">Loans</option>\n            <option value=\"969\">Savings</option>\n            <option value=\"555\">Credit Cards</option>\n          </select>\n        </div>\n\n        <div\n          style={{\n            display: 'flex',\n            justifyContent: 'center',\n            marginBottom: '0px',\n          }}\n        >\n          <button\n            onClick={() => {\n              props.setIsAuthenticated(false);\n            }}\n          >\n            Logout\n          </button>\n          {/* Non breaking space */}\n          &nbsp;\n           &nbsp;\n          <button type=\"submit\">Submit</button>\n        </div>\n        {success && (\n          <div className=\"generic-success\">\n            <p> Form has submitted successfully.</p>\n          </div>\n        )}\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","export default __webpack_public_path__ + \"static/media/dbs.57b7c479.png\";","import React from 'react'\nimport dbs from '../images/dbs.png';\n\n function Header (){\n    return (\n      <div className=\"headerTop\">\n        <img src={dbs} width=\"300\" height=\"300\" />\n        <h1 style={{color: 'white'}}>DBS Admin Portal</h1>\n        <h2 style={{color: 'white'}}>Login below</h2>\n        <br />\n        <p style={{color: 'blue'}}>(Username: admin, Password: admin)</p>\n      </div>\n    );\n}\n\nexport default Header;\n","import React, {useState} from 'react';\nimport Login from './components/login';\nimport Form from './components/form';\nimport Header from './components/Header';\nimport './App.scss';\n\nfunction App() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n  return (\n    <>\n      <Header />\n      {isAuthenticated ? (\n        <Form setIsAuthenticated={setIsAuthenticated} />\n      ) : (\n        <Login setIsAuthenticated={setIsAuthenticated} />\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './App.scss';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}